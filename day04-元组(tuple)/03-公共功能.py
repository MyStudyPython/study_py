"""
公共功能
相加  +  ---- 字符串拼接一样
相乘  *  ---- 列表复制
获取长度 len
索引 (只能读取，不能修改)
切片
for循环
"""

"""
相加 ---- 字符串拼接一样
两个列表相加获取生成一个新的列表
"""
data = ("11", "22") + ("33", "44")  # ('11', '22', '33', '44')

v1 = (11, 22)
v2 = (33, 44)
v3 = v1 + v2  # (11, 22, 33, 44)

"""
相乘  --- 列表复制
列表*整型 将列表中的元素再创建N份并生成一个新的列表
"""

data = ("11", "22") * 2  # ('11', '22', '11', '22')

v1 = (11, 22)
v2 = 2
v3 = v1 * v2  # (11, 22, 11, 22)

# 列表乘列表会报错
# v4 = (1, 2) * ("1", "2")

"""
获取长度 len
"""
v1 = ("好困", "想睡觉", "想回家", "想下班", "5:30")
len(v1)  # 5

"""
索引(只能读取，不能修改)
"""
v1 = ("好困", "想睡觉", "想回家", "想下班", "5:30")
v1[0]  # 好困
v1[2]  # 想回家
v1[3]  # 想下班

"""
切片、步长、for循环 跟数组一样
"""

"""
案例  取翻转时候 列表 & 元组(字符串) 区别
"""
# 元组
user_list = ("范德彪", "刘华强", "尼古拉斯赵四", "宋小宝", "刘能")
data = user_list[::-1]
user_list  # ('范德彪', '刘华强', '尼古拉斯赵四', '宋小宝', '刘能')
data  # ('刘能', '宋小宝', '尼古拉斯赵四', '刘华强', '范德彪')
# 列表
user_list = ["范德彪", "刘华强", "尼古拉斯赵四", "宋小宝", "刘能"]
## 方案1
data = user_list[::-1]
user_list  # ['范德彪', '刘华强', '尼古拉斯赵四', '宋小宝', '刘能']
data  # ['刘能', '宋小宝', '尼古拉斯赵四', '刘华强', '范德彪']
### 方案2
user_list.reverse()  # ['刘能', '宋小宝', '尼古拉斯赵四', '刘华强', '范德彪']
